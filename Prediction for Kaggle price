import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error

def bestmodel(model, train_x, x_val, train_y, y_val):
    model.fit(train_x, train_y)
    predictions = model.predict(x_val)
    return mean_absolute_error(y_val, predictions)




test = pd.read_csv("../input/house-prices-advanced-regression-techniques/test.csv")
train = pd.read_csv("../input/house-prices-advanced-regression-techniques/train.csv")
Train_y = train.SalePrice
f = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']
Train_X = train[f]
Test_X = test[f]

train_x, x_val, train_y, y_val = train_test_split(Train_X, Train_y, train_size=0.8, test_size=0.2,
                                                      random_state=0)
m1 = RandomForestRegressor(n_estimators=50, random_state=0)
m2 = RandomForestRegressor(n_estimators=100, random_state=0)
m3 = RandomForestRegressor(n_estimators=100, criterion='mae', random_state=0)
m4 = RandomForestRegressor(n_estimators=200, min_samples_split=20, random_state=0)
m5 = RandomForestRegressor(n_estimators=100, max_depth=7, random_state=0)
models = [m1, m2, m3, m4, m5]
b={}
for i in range(0,len(models)):
  b[models[i]]=bestmodel(models[i],train_x,x_val,train_y,y_val)
print(b)
bestm=min(b,key=b.get)
bestm.fit(Train_X,Train_y)
bestprediction=bestm.predict(Test_X)
predictionframe = pd.DataFrame({'Id':Test_X.index,
                       'SalePrice': bestprediction})
print(predictionframe)
predictionframe.to_csv('submission.csv', index=False)
